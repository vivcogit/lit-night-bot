package bot

import (
	"errors"
	"fmt"
	"log"
	"strconv"
	"strings"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type CallbackAction string

const (
	CBRemove            CallbackAction = "remove"
	CBRemovePage        CallbackAction = "remove_page"
	CBCancel            CallbackAction = "cancel"
	CBCurrentToWishlist CallbackAction = "cur2wish"
	CBCurrentToHistory  CallbackAction = "cur2his"
)

func GetCallbackParamStr(action CallbackAction, data string) string {
	return string(action) + ":" + data
}

func GetCallbackParam(callbackData string) (CallbackAction, string, error) {
	cb := strings.Split(callbackData, ":")

	if len(cb) != 2 {
		return "", "", errors.New("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: " + callbackData)
	}

	ca := CallbackAction(cb[0])
	switch ca {
	case CBRemove, CBCancel, CBCurrentToWishlist, CBCurrentToHistory, CBRemovePage:
		return ca, cb[1], nil
	}

	return "", "", errors.New("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: " + callbackData)
}

func (vb *LitNightBot) handleCallbackQuery(update *tgbotapi.Update) {
	cbAction, cbParam, err := GetCallbackParam(update.CallbackQuery.Data)

	if err != nil {
		fmt.Println(err.Error())
		return
	}

	chatId := update.CallbackQuery.Message.Chat.ID
	messageId := update.CallbackQuery.Message.MessageID

	switch cbAction {
	case CBRemove:
		cd := vb.getChatData(chatId)
		_, err := cd.RemoveBookFromWishlist(cbParam)
		vb.setChatData(chatId, cd)

		if err != nil {
			vb.sendMessage(chatId, err.Error())
			return
		}

		callbackConfig := tgbotapi.NewCallback(
			update.CallbackQuery.ID,
			"üéâ –£—Ä–∞! –ö–Ω–∏–≥–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∂–µ–ª–∞–µ–º–æ–≥–æ! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π! üìö",
		)
		vb.bot.Send(callbackConfig)

		text, buttons := getCleanWishlistMessage(cd)
		vb.editMessage(chatId, messageId, text, buttons)
		return
	case CBRemovePage:
		page, err := strconv.Atoi(cbParam)
		if err != nil {
			vb.sendMessage(chatId, "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
			return
		}
		vb.showRemoveWishlistPage(chatId, messageId, page)

	case CBCancel:
		vb.editMessage(chatId, update.CallbackQuery.Message.MessageID, "ü§≠ –£–ø—Å! –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ! –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è! üòâ", nil)

	case CBCurrentToHistory:
		vb.moveCurrentBook(chatId, update.CallbackQuery.Message.MessageID, true)

	case CBCurrentToWishlist:
		vb.moveCurrentBook(chatId, update.CallbackQuery.Message.MessageID, false)

	default:
		log.Printf("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback: %s. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–∞–±–æ—Ç—å—Ç–µ—Å—å –æ–± —ç—Ç–æ–º, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –≤–∞–º –≤—ã–±—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∫–Ω–∏–≥—É! üìöüòÖ", string(cbAction))
	}
}
